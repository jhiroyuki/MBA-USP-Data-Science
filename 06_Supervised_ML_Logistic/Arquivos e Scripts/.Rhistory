data.frame(z = -5:5) %>%
ggplot() +
stat_function(aes(x = z, color = "Prob. Evento"),
fun = prob,
size = 2) +
geom_hline(yintercept = 0.5, linetype = "dotted") +
scale_color_manual("Legenda:",
values = "#440154FF") +
labs(x = "Logito z",
y = "Probabilidade") +
theme_bw()
##############################################################################
#                       REGRESSÃO LOGÍSTICA BINÁRIA                          #
#                EXEMPLO 01 - CARREGAMENTO DA BASE DE DADOS                  #
##############################################################################
load(file = "Atrasado.rdata")
##############################################################################
#            EXEMPLO 01 - OBSERVAÇÃO DA BASE DE DADOS Atrasado               #
##############################################################################
#Visualizando a base de dados
Atrasado %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 25)
#Estatísticas descritivas univariadas da base de dados
summary(Atrasado)
#Tabela de frequências absolutas da variável 'atrasado'
table(Atrasado$atrasado)
##############################################################################
#           EXEMPLO 01 - ESTIMAÇÃO DE UM MODELO LOGÍSTICO BINÁRIO            #
##############################################################################
modelo_atrasos <- glm(formula = atrasado ~ dist + sem,
data = Atrasado,
family = "binomial")
#Parâmetros do modelo_atrasos
summary(modelo_atrasos)
##################################################################################
#                  INSTALAÇÃO E CARREGAMENTO DE PACOTES NECESSÁRIOS             #
##################################################################################
#Pacotes utilizados
pacotes <- c("plotly","tidyverse","knitr","kableExtra","fastDummies","rgl","car",
"reshape2","jtools","stargazer","lmtest","caret","pROC","ROCR","nnet",
"magick","cowplot","globals","equatiomatic")
options(rgl.debug = TRUE)
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
##############################################################################
#                   REGRESSÃO LOGÍSTICA BINÁRIA - PARTE CONCEITUAL           #
##############################################################################
#Estabelecendo uma função para a probabilidade de ocorrência de um evento
prob <- function(z){
prob = 1 / (1 + exp(-z))
}
#Plotando a curva sigmóide teórica de ocorrência de um evento para um range
#do logito z entre -5 e +5
data.frame(z = -5:5) %>%
ggplot() +
stat_function(aes(x = z, color = "Prob. Evento"),
fun = prob,
size = 2) +
geom_hline(yintercept = 0.5, linetype = "dotted") +
scale_color_manual("Legenda:",
values = "#440154FF") +
labs(x = "Logito z",
y = "Probabilidade") +
theme_bw()
##############################################################################
#                       REGRESSÃO LOGÍSTICA BINÁRIA                          #
#                EXEMPLO 01 - CARREGAMENTO DA BASE
DE DADOS                  #
##############################################################################
#                       REGRESSÃO LOGÍSTICA BINÁRIA                          #
#                EXEMPLO 01 - CARREGAMENTO DA BASE DE DADOS                  #
##############################################################################
load(file = "Atrasado.rdata")
##############################################################################
#            EXEMPLO 01 - OBSERVAÇÃO DA BASE DE DADOS Atrasado               #
##############################################################################
#Visualizando a base de dados
Atrasado %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 25)
#Estatísticas descritivas univariadas da base de dados
summary(Atrasado)
#Tabela de frequências absolutas da variável 'atrasado'
table(Atrasado$atrasado)
##############################################################################
#           EXEMPLO 01 - ESTIMAÇÃO DE UM MODELO LOGÍSTICO BINÁRIO            #
##############################################################################
modelo_atrasos <- glm(formula = atrasado ~ dist + sem,
data = Atrasado,
family = "binomial")
#Parâmetros do modelo_atrasos
summary(modelo_atrasos)
#Visualização do modelo no ambiente Viewer
#função 'extract_eq' do pacote 'equatiomatic'
extract_eq(modelo_atrasos, use_coefs = T,
wrap = T, show_distribution = T) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 25)
#Visualização do modelo no ambiente Viewer
#função 'extract_eq' do pacote 'equatiomatic'
extract_eq(modelo_atrasos, use_coefs = T,
wrap = T, show_distribution = T) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 25)
# Extração dos intervalos de confiança ao nível de siginificância de 5%
confint(modelo_atrasos, level = 0.95)
# Outras maneiras de apresentar os outputs do modelo
#Funções 'summ' e 'export_summs' do pacote 'jtools' e função 'stargazer' do
#pacote 'stargazer'
summ(modelo_atrasos, confint = T, digits = 3, ci.width = .95)
export_summs(modelo_atrasos, scale = F, digits = 6)
#Parâmetros do modelo_atrasos
summary(modelo_atrasos)
# Outras maneiras de apresentar os outputs do modelo
#Funções 'summ' e 'export_summs' do pacote 'jtools' e função 'stargazer' do
#pacote 'stargazer'
summ(modelo_atrasos, confint = T, digits = 3, ci.width = .95)
export_summs(modelo_atrasos, scale = F, digits = 6)
stargazer(modelo_atrasos, nobs = T, type = "text") # mostra o valor de Log-Likelihood
# Outras maneiras de apresentar os outputs do modelo
#Funções 'summ' e 'export_summs' do pacote 'jtools' e função 'stargazer' do
#pacote 'stargazer'
summ(modelo_atrasos, confint = T, digits = 3, ci.width = .95)
# Extração dos intervalos de confiança ao nível de siginificância de 5%
confint(modelo_atrasos, level = 0.95)
#Fazendo predições para o modelo_atrasos. Exemplo: qual a probabilidade média
#de se chegar atrasado quando o trajeto tem 7 km e passa-se por 10 semáforos no percurso?
predict(object = modelo_atrasos,
data.frame(dist = 7, sem = 10),
type = "response")
#Estatísticas descritivas univariadas da base de dados
summary(Atrasado)
#Tabela de frequências absolutas da variável 'atrasado'
table(Atrasado$atrasado)
##############################################################################
#           EXEMPLO 01 - ESTIMAÇÃO DE UM MODELO LOGÍSTICO BINÁRIO            #
##############################################################################
modelo_atrasos <- glm(formula = atrasado ~ dist + sem,
data = Atrasado,
family = "binomial")
#Parâmetros do modelo_atrasos
summary(modelo_atrasos)
##################################################################################
#                  INSTALAÇÃO E CARREGAMENTO DE PACOTES NECESSÁRIOS             #
##################################################################################
#Pacotes utilizados
pacotes <- c("plotly","tidyverse","knitr","kableExtra","fastDummies","rgl","car",
"reshape2","jtools","stargazer","lmtest","caret","pROC","ROCR","nnet",
"magick","cowplot","globals","equatiomatic")
options(rgl.debug = TRUE)
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
##############################################################################
#                   REGRESSÃO LOGÍSTICA BINÁRIA - PARTE CONCEITUAL           #
##############################################################################
#Estabelecendo uma função para a probabilidade de ocorrência de um evento
prob <- function(z){
prob = 1 / (1 + exp(-z))
}
#Plotando a curva sigmóide teórica de ocorrência de um evento para um range
#do logito z entre -5 e +5
data.frame(z = -5:5) %>%
ggplot() +
stat_function(aes(x = z, color = "Prob. Evento"),
fun = prob,
size = 2) +
geom_hline(yintercept = 0.5, linetype = "dotted") +
scale_color_manual("Legenda:",
values = "#440154FF") +
labs(x = "Logito z",
y = "Probabilidade") +
theme_bw()
##############################################################################
#                       REGRESSÃO LOGÍSTICA BINÁRIA                          #
#                EXEMPLO 01 - CARREGAMENTO DA BASE DE DADOS                  #
##############################################################################
load(file = "Atrasado.rdata")
##############################################################################
#            EXEMPLO 01 - OBSERVAÇÃO DA BASE DE DADOS Atrasado               #
##############################################################################
#Visualizando a base de dados
Atrasado %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 25)
#Estatísticas descritivas univariadas da base de dados
summary(Atrasado)
#Tabela de frequências absolutas da variável 'atrasado'
table(Atrasado$atrasado)
##############################################################################
#           EXEMPLO 01 - ESTIMAÇÃO DE UM MODELO LOGÍSTICO BINÁRIO            #
##############################################################################
modelo_atrasos <- glm(formula = atrasado ~ dist + sem,
data = Atrasado,
family = "binomial")
#Parâmetros do modelo_atrasos
summary(modelo_atrasos)
#Visualização do modelo no ambiente Viewer
#função 'extract_eq' do pacote 'equatiomatic'
extract_eq(modelo_atrasos, use_coefs = T,
wrap = T, show_distribution = T) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 25)
# Extração dos intervalos de confiança ao nível de siginificância de 5%
confint(modelo_atrasos, level = 0.95)
#Extração do valor de Log-Likelihood (LL)
logLik(modelo_atrasos)
# Outras maneiras de apresentar os outputs do modelo
#Funções 'summ' e 'export_summs' do pacote 'jtools' e função 'stargazer' do
#pacote 'stargazer'
summ(modelo_atrasos, confint = T, digits = 3, ci.width = .95)
export_summs(modelo_atrasos, scale = F, digits = 6)
stargazer(modelo_atrasos, nobs = T, type = "text") # mostra o valor de Log-Likelihood
#Fazendo predições para o modelo_atrasos. Exemplo: qual a probabilidade média
#de se chegar atrasado quando o trajeto tem 7 km e passa-se por 10 semáforos no percurso?
predict(object = modelo_atrasos,
data.frame(dist = 7, sem = 10),
type = "response")
##############################################################################
#               EXEMPLO 01 - CONSTRUÇÃO DE UMA MATRIZ DE CONFUSÃO            #
##############################################################################
# Adicionando os valores previstos de probabilidade na base de dados
Atrasado$phat <- modelo_atrasos$fitted.values
#Visualizando a base de dados com a variável 'phat'
Atrasado %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 22)
# Ajuste linear entre a variável dependente e a variável 'sem' (apenas para fins
#didáticos)
ggplotly(
Atrasado %>%
ggplot() +
geom_point(aes(x = sem, y = atrasado), color = "orange", size = 2) +
geom_smooth(aes(x = sem, y = phat),
method = "lm", formula = y ~ x,
se = FALSE,
color = "darkorchid", size = 2) +
labs(x = "Quantidade de Semáforos",
y = "Atrasado") +
theme_bw()
)
# Ajuste logístico determinístico entre a variável dependente e a variável 'sem'
#Sigmóide
ggplotly(
Atrasado %>%
ggplot() +
geom_point(aes(x = sem, y = atrasado), color = "orange", size = 2) +
geom_smooth(aes(x = sem, y = phat),
method = "glm", formula = y ~ x,
method.args = list(family = "binomial"),
se = FALSE,
color = "darkorchid", size = 2) +
labs(x = "Quantidade de Semáforos",
y = "Atrasado") +
theme_bw()
)
# Ajuste logístico probabilístico entre a variável dependente e a variável 'sem'
#Sigmóide
ggplotly(
Atrasado %>%
ggplot() +
geom_point(aes(x = sem, y = phat), color = "orange", size = 2) +
geom_smooth(aes(x = sem, y = phat),
method = "glm", formula = y ~ x,
method.args = list(family = "binomial"),
se = FALSE,
color = "darkorchid", size = 2) +
labs(x = "Quantidade de Semáforos",
y = "Atrasado") +
theme_bw()
)
##################################################################################
#                  INSTALAÇÃO E CARREGAMENTO DE PACOTES NECESSÁRIOS             #
##################################################################################
#Pacotes utilizados
pacotes <- c("plotly","tidyverse","knitr","kableExtra","fastDummies","rgl","car",
"reshape2","jtools","stargazer","lmtest","caret","pROC","ROCR","nnet",
"magick","cowplot","globals","equatiomatic")
options(rgl.debug = TRUE)
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
##############################################################################
#           EXEMPLO 04 - ESTIMAÇÃO DE UM MODELO LOGÍSTICO MULTINOMIAL        #
##############################################################################
#Apontando a categoria de referência
AtrasadoMultinomial$atrasado <- relevel(AtrasadoMultinomial$atrasado,
ref = "nao chegou atrasado")
##############################################################################
#                       REGRESSÃO LOGÍSTICA MULTINOMIAL                      #
#                 EXEMPLO 04 - CARREGAMENTO DA BASE DE DADOS                 #
##############################################################################
load(file = "AtrasadoMultinomial.RData")
##############################################################################
#        EXEMPLO 04 - OBSERVAÇÃO DA BASE DE DADOS AtrasadoMultinomial        #
##############################################################################
#Visualizando a base de dados AtrasadoMultinomial
AtrasadoMultinomial %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 22)
#Estatísticas descritivas univariadas da base de dados
summary(AtrasadoMultinomial)
##############################################################################
#           EXEMPLO 04 - ESTIMAÇÃO DE UM MODELO LOGÍSTICO MULTINOMIAL        #
##############################################################################
#Apontando a categoria de referência
AtrasadoMultinomial$atrasado <- relevel(AtrasadoMultinomial$atrasado,
ref = "nao chegou atrasado")
#Estimação do modelo - função multinom do pacote nnet
modelo_atrasado <- multinom(formula = atrasado ~ dist + sem,
data = AtrasadoMultinomial)
#Parâmetros do modelo_atrasado
summary(modelo_atrasado)
#Outra maneira de apresentar os outputs do modelo
#função stargazer do pacote stargazer -> mais adequado que a função export_summs
stargazer(modelo_atrasado, nobs=T, type="text")
#A função summ do pacote jtools não funciona para objetos de classe 'multinom'. Logo,
#vamos definir uma função Qui2 para se extrair a estatística geral do modelo:
Qui2 <- function(x) {
maximo <- logLik(x)
minimo <- logLik(update(x, ~1, trace = F))
Qui.Quadrado <- -2*(minimo - maximo)
pvalue <- pchisq(Qui.Quadrado, df = 1, lower.tail = F)
df <- data.frame()
df <- cbind.data.frame(Qui.Quadrado, pvalue)
return(df)
}
#Estatística geral do modelo_atrasado
Qui2(modelo_atrasado)
zWald_modelo_atrasado <- (summary(modelo_atrasado)$coefficients /
summary(modelo_atrasado)$standard.errors)
zWald_modelo_atrasado
#Porém, ainda faltam os respectivos p-values. Assim, os valores das probabilidades
#associadas às abscissas de uma distribuição normal-padrão é dada pela função
#pnorm(), considerando os valores em módulo - abs(). Após isso, multiplicamos
#por dois os valores obtidos para considerar os dois lados da distribuição
#normal padronizada (distribuição bicaudal). Desta forma, temos que:
round((pnorm(abs(zWald_modelo_atrasado), lower.tail = F) * 2), 4)
#Parâmetros do modelo_atrasado
summary(modelo_atrasado)
#Outra maneira de apresentar os outputs do modelo
#função stargazer do pacote stargazer -> mais adequado que a função export_summs
stargazer(modelo_atrasado, nobs=T, type="text")
##################################################################################
#                  INSTALAÇÃO E CARREGAMENTO DE PACOTES NECESSÁRIOS             #
##################################################################################
#Pacotes utilizados
pacotes <- c("plotly","tidyverse","knitr","kableExtra","fastDummies","rgl","car",
"reshape2","jtools","stargazer","lmtest","caret","pROC","ROCR","nnet",
"magick","cowplot","globals","equatiomatic")
options(rgl.debug = TRUE)
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
##############################################################################
#                       REGRESSÃO LOGÍSTICA MULTINOMIAL                      #
#                 EXEMPLO 04 - CARREGAMENTO DA BASE DE DADOS                 #
##############################################################################
load(file = "AtrasadoMultinomial.RData")
##############################################################################
#        EXEMPLO 04 - OBSERVAÇÃO DA BASE DE DADOS AtrasadoMultinomial        #
##############################################################################
#Visualizando a base de dados AtrasadoMultinomial
AtrasadoMultinomial %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 22)
#Estatísticas descritivas univariadas da base de dados
summary(AtrasadoMultinomial)
##############################################################################
#           EXEMPLO 04 - ESTIMAÇÃO DE UM MODELO LOGÍSTICO MULTINOMIAL        #
##############################################################################
#Apontando a categoria de referência
AtrasadoMultinomial$atrasado <- relevel(AtrasadoMultinomial$atrasado,
ref = "nao chegou atrasado")
#Estimação do modelo - função multinom do pacote nnet
modelo_atrasado <- multinom(formula = atrasado ~ dist + sem,
data = AtrasadoMultinomial)
#Parâmetros do modelo_atrasado
summary(modelo_atrasado)
#Outra maneira de apresentar os outputs do modelo
#função stargazer do pacote stargazer -> mais adequado que a função export_summs
stargazer(modelo_atrasado, nobs=T, type="text")
#LL do modelo_atrasado
logLik(modelo_atrasado)
#A função summ do pacote jtools não funciona para objetos de classe 'multinom'. Logo,
#vamos definir uma função Qui2 para se extrair a estatística geral do modelo:
Qui2 <- function(x) {
maximo <- logLik(x)
minimo <- logLik(update(x, ~1, trace = F))
Qui.Quadrado <- -2*(minimo - maximo)
pvalue <- pchisq(Qui.Quadrado, df = 1, lower.tail = F)
df <- data.frame()
df <- cbind.data.frame(Qui.Quadrado, pvalue)
return(df)
}
#Estatística geral do modelo_atrasado
Qui2(modelo_atrasado)
zWald_modelo_atrasado <- (summary(modelo_atrasado)$coefficients /
summary(modelo_atrasado)$standard.errors)
zWald_modelo_atrasado
#Porém, ainda faltam os respectivos p-values. Assim, os valores das probabilidades
#associadas às abscissas de uma distribuição normal-padrão é dada pela função
#pnorm(), considerando os valores em módulo - abs(). Após isso, multiplicamos
#por dois os valores obtidos para considerar os dois lados da distribuição
#normal padronizada (distribuição bicaudal). Desta forma, temos que:
round((pnorm(abs(zWald_modelo_atrasado), lower.tail = F) * 2), 4)
#Fazendo predições para o modelo_atrasado. Exemplo: qual a probabilidade média
#de atraso para cada categoria da variável dependente, se o indivíduo tiver
#que percorrer 22km e passar por 12 semáforos?
predict(modelo_atrasado,
data.frame(dist = 22, sem = 12),
type = "probs")
predict(modelo_atrasado,
data.frame(dist = 22, sem = 12),
type = "class")
##############################################################################
#                   EXEMPLO 04 - A EFETIVIDADE GERAL DO MODELO               #
##############################################################################
#Adicionando as prováveis ocorrências de evento apontadas pela modelagem à
#base de dados
AtrasadoMultinomial$predicao <- predict(modelo_atrasado,
newdata = AtrasadoMultinomial,
type = "class")
#Visualizando a nova base de dados AtrasadoMultinomial com a variável 'predicao'
AtrasadoMultinomial %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 22)
attach(AtrasadoMultinomial)
#Criando uma tabela para comparar as ocorrências reais com as predições
EGM <- as.data.frame.matrix(table(predicao, atrasado))
#Visualizando a tabela EGM
EGM %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = F,
font_size = 22)
#Eficiência global do modelo
acuracia <- (round((sum(diag(table(atrasado, predicao))) /
sum(table(atrasado, predicao))), 2))
acuracia
#Adicionando à base de dados as probabilidades em razão de cada categoria:
levels(AtrasadoMultinomial$atrasado)
AtrasadoMultinomial[c("nao chegou atrasado",
"chegou atrasado à primeira aula",
"chegou atrasado à segunda aula")] <- modelo_atrasado$fitted.values
#Plotagem das smooth probability lines para a variável 'dist'
ggplotly(
AtrasadoMultinomial %>%
dplyr::select(-predicao, - estudante) %>%
rename(y = 1) %>%
melt(id.vars = c("y","dist","sem"),
value.name = "probabilidades") %>%
rename(categorias = variable) %>%
mutate(categorias = factor(categorias,
levels = c("nao chegou atrasado",
"chegou atrasado à primeira aula",
"chegou atrasado à segunda aula"))) %>%
ggplot() +
geom_smooth(aes(x = dist, y = probabilidades, color = categorias),
method = "loess", formula = y ~ x, se = T) +
labs(x = "Distância Percorrida",
y = "Probabilidades",
color = "Legenda:") +
scale_color_viridis_d() +
theme_bw()
)
