pacotes <- c("plotly", #plataforma gráfica
"tidyverse", #carregar outros pacotes do R
"ggrepel", #geoms de texto e rótulo para 'ggplot2' que ajudam a
#evitar sobreposição de textos
"knitr", "kableExtra", #formatação de tabelas
"reshape2", #função 'melt'
"misc3d", #gráficos 3D
"plot3D", #gráficos 3D
"cluster", #função 'agnes' para elaboração de clusters hierárquicos
"factoextra", #função 'fviz_dend' para construção de dendrogramas
"ade4") #função 'ade4' para matriz de distâncias em var. binárias
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
pacotes <- c("plotly", #plataforma gráfica
"tidyverse", #carregar outros pacotes do R
"ggrepel", #geoms de texto e rótulo para 'ggplot2' que ajudam a
#evitar sobreposição de textos
"knitr", "kableExtra", #formatação de tabelas
"reshape2", #função 'melt'
"misc3d", #gráficos 3D
"plot3D", #gráficos 3D
"cluster", #função 'agnes' para elaboração de clusters hierárquicos
"factoextra", #função 'fviz_dend' para construção de dendrogramas
"ade4") #função 'ade4' para matriz de distâncias em var. binárias
pacotes <- c("plotly", #plataforma gráfica
"tidyverse", #carregar outros pacotes do R
"ggrepel", #geoms de texto e rótulo para 'ggplot2' que ajudam a
#evitar sobreposição de textos
"knitr", "kableExtra", #formatação de tabelas
"reshape2", #função 'melt'
"misc3d", #gráficos 3D
"plot3D", #gráficos 3D
"cluster", #função 'agnes' para elaboração de clusters hierárquicos
"factoextra", #função 'fviz_dend' para construção de dendrogramas
"ade4") #função 'ade4' para matriz de distâncias em var. binárias
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
sapply(pacotes, require, character = T)
# Carregamento da base de dados (Vestibular)
load(file = "Vestibular.RData")
# Visualização da base de dados
Vestibular %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = FALSE,
font_size = 20)
# Gráfico 3D com scatter
rownames(Vestibular) <- Vestibular$estudante
# phi = ângulo de visualização
# bty = estilo da caixa (testar "b2" e "bl")
# pch = pointshapes, o número se refere a um tipo em uma tabela
# cex = fator de expansão dos pontos de scatter
scatter3D(x=Vestibular$fisica,
y=Vestibular$matematica,
z=Vestibular$quimica,
phi = 0, bty = "g", pch = 20, cex = 2,
xlab = "Fisica",
ylab = "Matematica",
zlab = "Quimica",
main = "Vestibular",
clab = "Nota de Quimica")>
text3D(x=Vestibular$fisica,
y=Vestibular$matematica,
z=Vestibular$quimica,
labels = rownames(Vestibular),
add = TRUE, cex = 1)
# Estatísticas descritivas
summary(Vestibular)
# Se for necessário padronizar, é possível utilizar a função scale()
vest_padronizado <- as.data.frame(scale(Vestibular[,2:4]))
rownames(vest_padronizado) <- Vestibular$estudante
summary(vest_padronizado)
# Boxplots por variável
ggplotly(
Vestibular %>%
melt() %>%
ggplot(aes(label = estudante)) +
geom_boxplot(aes(x = variable, y = value, fill = variable)) +
geom_point(aes(x = variable, y = value), alpha = 0.5) +
labs(x = "Variável",
y = "Nota") +
scale_fill_manual("Legenda:",
values = c("orange", "purple", "bisque4")) +
theme_bw()
)
# Matriz de dissimilaridades
matriz_D <- Vestibular %>%
select(matematica, fisica, quimica) %>%
dist(method = "euclidean")
# Visualizando a matriz de dissimilaridades
data.matrix(matriz_D) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = FALSE,
font_size = 20)
# Elaboração da clusterização hierárquica
cluster_hier <- agnes(x = matriz_D, method = "single")
# As distâncias para as combinações em cada estágio
coeficientes <- sort(cluster_hier$height, decreasing = FALSE)
coeficientes
esquema <- as.data.frame(cbind(cluster_hier$merge, coeficientes))
names(esquema) <- c("Cluster1", "Cluster2", "Coeficientes")
esquema
# Visualização do esquema hierárquico de aglomeração
esquema %>%
kable(row.names = T) %>%
kable_styling(bootstrap_options = "striped",
full_width = FALSE,
font_size = 20)
# Construção do dendrograma
dev.off()
fviz_dend(x = cluster_hier)
# Dendrograma com visualização dos clusters (definição de 3 clusters)
fviz_dend(x = cluster_hier,
k = 3,
k_colors = c("deeppink4", "darkviolet", "deeppink"),
color_labels_by_k = F,
rect = T,
rect_fill = T,
lwd = 1,
ggtheme = theme_bw())
# Criando variável categórica para indicação do cluster no banco de dados
## O argumento 'k' indica a quantidade de clusters
Vestibular$cluster_H <- factor(cutree(tree = cluster_hier, k = 3))
# Visualização da base de dados com a alocação das observações nos clusters
Vestibular %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = FALSE,
font_size = 20)
# Estatísticas descritivas da variável 'matematica'
group_by(Vestibular, cluster_H) %>%
summarise(
mean = mean(matematica, na.rm = TRUE),
sd = sd(matematica, na.rm = TRUE),
min = min(matematica, na.rm = TRUE),
max = max(matematica, na.rm = TRUE))
# Estatísticas descritivas da variável 'fisica'
group_by(Vestibular, cluster_H) %>%
summarise(
mean = mean(fisica, na.rm = TRUE),
sd = sd(fisica, na.rm = TRUE),
min = min(fisica, na.rm = TRUE),
max = max(fisica, na.rm = TRUE))
# Estatísticas descritivas da variável 'quimica'
group_by(Vestibular, cluster_H) %>%
summarise(
mean = mean(quimica, na.rm = TRUE),
sd = sd(quimica, na.rm = TRUE),
min = min(quimica, na.rm = TRUE),
max = max(quimica, na.rm = TRUE))
# ANOVA da variável 'matematica'
summary(anova_matematica <- aov(formula = matematica ~ cluster_H,
data = Vestibular))
# ANOVA da variável 'fisica'
summary(anova_fisica <- aov(formula = fisica ~ cluster_H,
data = Vestibular))
# ANOVA da variável 'quimica'
summary(anova_quimica <- aov(formula = quimica ~ cluster_H,
data = Vestibular))
# Elaboração da clusterização não hieráquica k-means
cluster_kmeans <- kmeans(Vestibular[,2:4],
centers = 3)
# Método de Elbow para identificação do número ótimo de clusters
## Apresenta a variação total dentro dos clusters para várias nº de clusters
## Em geral, quando há a dobra é um indício do número ótimo de clusters
fviz_nbclust(Vestibular[,2:4], kmeans, method = "wss", k.max = 4)
# Criando variável categórica para indicação do cluster no banco de dados
Vestibular$cluster_K <- factor(cluster_kmeans$cluster)
# Visualização da base de dados
Vestibular %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = FALSE,
font_size = 20)
# ANOVA da variável 'matematica'
summary(anova_matematica <- aov(formula = matematica ~ cluster_K,
data = Vestibular))
# ANOVA da variável 'fisica'
summary(anova_fisica <- aov(formula = fisica ~ cluster_K,
data = Vestibular))
# ANOVA da variável 'quimica'
summary(anova_quimica <- aov(formula = quimica ~ cluster_K,
data = Vestibular))
# Comparando os resultados dos esquemas hierárquico e não hierárquico
Vestibular %>%
select(estudante, cluster_H, cluster_K) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = FALSE,
font_size = 20)
# FIM!
# FIM!
# FIM!
# FIM!
pacotes <- c("plotly", #plataforma gráfica
"tidyverse", #carregar outros pacotes do R
"ggrepel", #geoms de texto e rótulo para 'ggplot2' que ajudam a
#evitar sobreposição de textos
"knitr", "kableExtra", #formatação de tabelas
"reshape2", #função 'melt'
"misc3d", #gráficos 3D
"plot3D", #gráficos 3D
"cluster", #função 'agnes' para elaboração de clusters hierárquicos
"factoextra", #função 'fviz_dend' para construção de dendrogramas
"ade4") #função 'ade4' para matriz de distâncias em var. binárias
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
# Carregamento da base de dados (Vestibular)
load(file = "Vestibular.RData")
# Visualização da base de dados
Vestibular %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = FALSE,
font_size = 20)
# Gráfico 3D com scatter
rownames(Vestibular) <- Vestibular$estudante
# phi = ângulo de visualização
# bty = estilo da caixa (testar "b2" e "bl")
# pch = pointshapes, o número se refere a um tipo em uma tabela
# cex = fator de expansão dos pontos de scatter
scatter3D(x=Vestibular$fisica,
y=Vestibular$matematica,
z=Vestibular$quimica,
phi = 0, bty = "g", pch = 20, cex = 2,
xlab = "Fisica",
ylab = "Matematica",
zlab = "Quimica",
main = "Vestibular",
clab = "Nota de Quimica")>
text3D(x=Vestibular$fisica,
y=Vestibular$matematica,
z=Vestibular$quimica,
labels = rownames(Vestibular),
add = TRUE, cex = 1)
# Estatísticas descritivas
summary(Vestibular)
# Se for necessário padronizar, é possível utilizar a função scale()
vest_padronizado <- as.data.frame(scale(Vestibular[,2:4]))
rownames(vest_padronizado) <- Vestibular$estudante
summary(vest_padronizado)
# Boxplots por variável
ggplotly(
Vestibular %>%
melt() %>%
ggplot(aes(label = estudante)) +
geom_boxplot(aes(x = variable, y = value, fill = variable)) +
geom_point(aes(x = variable, y = value), alpha = 0.5) +
labs(x = "Variável",
y = "Nota") +
scale_fill_manual("Legenda:",
values = c("orange", "purple", "bisque4")) +
theme_bw()
)
# Matriz de dissimilaridades
matriz_D <- Vestibular %>%
select(matematica, fisica, quimica) %>%
dist(method = "euclidean")
# Visualizando a matriz de dissimilaridades
data.matrix(matriz_D) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = FALSE,
font_size = 20)
# Elaboração da clusterização hierárquica
cluster_hier <- agnes(x = matriz_D, method = "single")
# As distâncias para as combinações em cada estágio
coeficientes <- sort(cluster_hier$height, decreasing = FALSE)
coeficientes
esquema <- as.data.frame(cbind(cluster_hier$merge, coeficientes))
names(esquema) <- c("Cluster1", "Cluster2", "Coeficientes")
esquema
# Visualização do esquema hierárquico de aglomeração
esquema %>%
kable(row.names = T) %>%
kable_styling(bootstrap_options = "striped",
full_width = FALSE,
font_size = 20)
# Construção do dendrograma
dev.off()
fviz_dend(x = cluster_hier)
# Dendrograma com visualização dos clusters (definição de 3 clusters)
fviz_dend(x = cluster_hier,
k = 3,
k_colors = c("deeppink4", "darkviolet", "deeppink"),
color_labels_by_k = F,
rect = T,
rect_fill = T,
lwd = 1,
ggtheme = theme_bw())
# Criando variável categórica para indicação do cluster no banco de dados
## O argumento 'k' indica a quantidade de clusters
Vestibular$cluster_H <- factor(cutree(tree = cluster_hier, k = 3))
# Visualização da base de dados com a alocação das observações nos clusters
Vestibular %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = FALSE,
font_size = 20)
# Estatísticas descritivas da variável 'matematica'
group_by(Vestibular, cluster_H) %>%
summarise(
mean = mean(matematica, na.rm = TRUE),
sd = sd(matematica, na.rm = TRUE),
min = min(matematica, na.rm = TRUE),
max = max(matematica, na.rm = TRUE))
# Estatísticas descritivas da variável 'fisica'
group_by(Vestibular, cluster_H) %>%
summarise(
mean = mean(fisica, na.rm = TRUE),
sd = sd(fisica, na.rm = TRUE),
min = min(fisica, na.rm = TRUE),
max = max(fisica, na.rm = TRUE))
# Estatísticas descritivas da variável 'quimica'
group_by(Vestibular, cluster_H) %>%
summarise(
mean = mean(quimica, na.rm = TRUE),
sd = sd(quimica, na.rm = TRUE),
min = min(quimica, na.rm = TRUE),
max = max(quimica, na.rm = TRUE))
# ANOVA da variável 'matematica'
summary(anova_matematica <- aov(formula = matematica ~ cluster_H,
data = Vestibular))
# ANOVA da variável 'fisica'
summary(anova_fisica <- aov(formula = fisica ~ cluster_H,
data = Vestibular))
# ANOVA da variável 'quimica'
summary(anova_quimica <- aov(formula = quimica ~ cluster_H,
data = Vestibular))
# Elaboração da clusterização não hieráquica k-means
cluster_kmeans <- kmeans(Vestibular[,2:4],
centers = 3)
# Método de Elbow para identificação do número ótimo de clusters
## Apresenta a variação total dentro dos clusters para várias nº de clusters
## Em geral, quando há a dobra é um indício do número ótimo de clusters
fviz_nbclust(Vestibular[,2:4], kmeans, method = "wss", k.max = 4)
# Criando variável categórica para indicação do cluster no banco de dados
Vestibular$cluster_K <- factor(cluster_kmeans$cluster)
# Visualização da base de dados
Vestibular %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = FALSE,
font_size = 20)
# ANOVA da variável 'matematica'
summary(anova_matematica <- aov(formula = matematica ~ cluster_K,
data = Vestibular))
# ANOVA da variável 'fisica'
summary(anova_fisica <- aov(formula = fisica ~ cluster_K,
data = Vestibular))
# ANOVA da variável 'quimica'
summary(anova_quimica <- aov(formula = quimica ~ cluster_K,
data = Vestibular))
# Comparando os resultados dos esquemas hierárquico e não hierárquico
Vestibular %>%
select(estudante, cluster_H, cluster_K) %>%
kable() %>%
kable_styling(bootstrap_options = "striped",
full_width = FALSE,
font_size = 20)
# FIM!
# FIM!
# FIM!
# FIM!
View(Vestibular)
View(Vestibular)
pacotes <- c("plotly", #plataforma gráfica
"tidyverse", #carregar outros pacotes do R
"ggrepel", #geoms de texto e rótulo para 'ggplot2' que ajudam a
#evitar sobreposição de textos
"knitr", "kableExtra", #formatação de tabelas
"reshape2", #função 'melt'
"misc3d", #gráficos 3D
"plot3D", #gráficos 3D
"cluster", #função 'agnes' para elaboração de clusters hierárquicos
"factoextra", #função 'fviz_dend' para construção de dendrogramas
"ade4") #função 'ade4' para matriz de distâncias em var. binárias
if(sum(as.numeric(!pacotes %in% installed.packages())) != 0){
instalador <- pacotes[!pacotes %in% installed.packages()]
for(i in 1:length(instalador)) {
install.packages(instalador, dependencies = T)
break()}
sapply(pacotes, require, character = T)
} else {
sapply(pacotes, require, character = T)
}
# Carregamento da base de dados (Vestibular)
load(file = "datasets/Vestibular.RData")
paises <- read.csv("datasets/dados_paises.csv", sep = ",", dec = ".")
# Carregamento da base de dados
load(file = "datasets/Pesquisa Binária.RData")
# Carregamento da base de dados
load(file = "datasets/Regional Varejista.RData")
dados_uso <- read.csv("datasets/cartao_credito.csv")
